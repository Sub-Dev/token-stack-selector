/**
 * Token Stack Selector - MÃ³dulo Principal
 * VersÃ£o componentizada para melhor organizaÃ§Ã£o e manutenÃ§Ã£o
 * 
 * @author Sub-Dev
 * @version 1.0.0
 */

import { TokenStackSelector } from './src/token-stack-selector.js';

// Inicializa o mÃ³dulo quando o Foundry estiver pronto
Hooks.once('ready', () => {
  console.log('ðŸŽ¯ Token Stack Selector | Starting... (Inicializando...)');

  try {
    TokenStackSelector.initialize();

    // Make globally available for debug (Disponibiliza globalmente para debug)
    window.TokenStackSelector = TokenStackSelector;

    console.log('ðŸŽ¯ Token Stack Selector | Module loaded successfully! (MÃ³dulo carregado com sucesso!)');

    // User notification (GM only) (NotificaÃ§Ã£o para o usuÃ¡rio - apenas GMs)
    if (game.user.isGM) {
      ui.notifications.info('Token Stack Selector activated! (Token Stack Selector ativado!) ðŸŽ¯', { permanent: false });
    }

  } catch (error) {
    console.error('ðŸŽ¯ Token Stack Selector | Initialization error (Erro na inicializaÃ§Ã£o):', error);
    ui.notifications.error('Error loading Token Stack Selector (Erro ao carregar Token Stack Selector)');
  }
});

// Cleanup hook when module is disabled (Hook para limpeza quando o mÃ³dulo for desabilitado)
Hooks.on('hotReload', () => {
  console.log('ðŸŽ¯ Token Stack Selector | Hot reload detected (Hot reload detectado)');

  if (window.TokenStackSelector) {
    window.TokenStackSelector.shutdown();
  }
});

// Console commands for developers (Comandos de console para desenvolvedores)
console.log(`
ðŸŽ¯ Token Stack Selector - Debug Commands (Comandos de Debug):
  â€¢ TokenStackSelector.debug() - Debug information (InformaÃ§Ãµes de debug)
  â€¢ TokenStackSelector.getStats() - Module statistics (EstatÃ­sticas do mÃ³dulo)
  â€¢ TokenStackSelector.reload() - Reload module (Recarregar mÃ³dulo)
  â€¢ TokenStackSelector.shutdown() - Shutdown module (Desligar mÃ³dulo)
`);
